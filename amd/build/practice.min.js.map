{"version":3,"file":"practice.min.js","sources":["../src/practice.js"],"sourcesContent":["define(['jquery', 'core/log', 'core/ajax', 'mod_readaloud/definitions', 'mod_readaloud/ttrecorder'],\n    function($, log, ajax, def,  ttrecorder) {\n  \"use strict\"; // jshint ;_;\n\n  log.debug('Readaloud Practice: initialising');\n\n  return {\n\n    activated: false,\n    audiourl: \"\",\n    currentSentence: \"\",\n    currentPhonetic: \"\",\n    language: \"en-US\",\n    breaks: [],\n    currentbreak: 0,\n    controls: {},\n    results: [],\n    phonetics: [],\n    cmid: 0,\n    ttr: {},\n\n    init: function(props) {\n\n      var self = this;\n      self.cmid = props.cmid;\n\n      //Get info from modelaudiokaraoke about breaks and text, for use here\n      self.mak = props.modelaudiokaraoke;\n      self.audiourl = self.mak.fetch_audio_url();\n      self.set_breaks(self.mak.breaks);\n\n      self.language = props.language;\n      self.region = props.region;\n      self.phonetics = props.phonetics;\n      self.stt_guided = props.stt_guided;\n      self.shadow = false;//props.shadow;\n      self.ttr={};\n\n      //recorder stuff\n      var theCallback =function(message) {\n          log.debug('Readaloud Practice: ttrecorder callback', message);\n          log.debug(message);\n          switch (message.type) {\n            case 'recordingstarted':\n              if (self.controls.shadowplaycheckbox.is(\":checked\")) {\n                self.shadow = true;\n                log.debug('shadow is true');\n                self.controls.playbutton.trigger('click');\n              }else{\n                log.debug('shadow is false');\n                self.shadow=false;\n              }\n              //hide the self model player (though it may not be here) because we do not want it playing old stuff into mic\n              self.controls.playselfbutton.hide();\n\n              break;\n\n            case 'recordingstopped':\n                  if (self.shadow === true){\n                    self.controls.hiddenplayer[0].pause();\n                  }\n                  if(self.stt_guided || self.ttr.usebrowserrec===false){\n                    self.controls.playselfbutton.show();\n                  }\n                  break;\n\n              case 'speech':\n\n                  self.getComparison(\n                      self.cmid,\n                      self.currentSentence,\n                      message.capturedspeech,\n                      self.currentPhonetic,\n                      function(comparison) {\n                          self.gotComparison(comparison, message);\n                      }\n                  );\n                  break;\n          }\n      };\n\n        //init tt recorder\n      var opts = {};\n      opts.uniqueid = 'readaloud_ttrecorder';\n      opts.stt_guided = self.stt_guided;\n      opts.callback = theCallback;\n      opts.shadow = false;\n      self.ttr = ttrecorder.clone();\n      self.ttr.init(opts);\n\n\n      self.prepare_controls();\n      self.register_events();\n      // Set the first break as current.\n      self.move_break(0);\n\n    },\n\n\n    prepare_controls: function() {\n      var self = this;\n\n        // Control references\n      self.controls.container = $('#mod_readaloud_practice_cont_wrap');\n      self.controls.mainstage = self.controls.container.find('#mod_readaloud_practice_inner');\n      self.controls.targetphrase = self.controls.container.find('#mod_readaloud_practice_target_phrase');\n      self.controls.playbutton = $('#mod_readaloud_practice_play');\n      self.controls.shadowplaycheckbox = $('#mod_readaloud_practice_shadow');\n      self.controls.skipforwardbutton = $('#mod_readaloud_practice_skipforward');\n      self.controls.skipbackbutton = $('#mod_readaloud_practice_skipback');\n      self.controls.finishedbutton = $(\"#mod_readaloud_practice_finished\");\n      self.controls.playselfbutton = $(\"#mod_readaloud_practice_playself\");\n\n\n      // Results Screen\n      self.controls.resultscontainer = self.controls.container.find('.ra_practice_results_container');\n      self.controls.results_text = self.controls.resultscontainer.find('.ra_practice_results_text');\n      self.controls.results_retrybutton = self.controls.resultscontainer.find('.ra_practice_retry');\n      self.controls.results_nextbutton = self.controls.resultscontainer.find('.ra_practice_next');\n      self.controls.results_playbutton = self.controls.resultscontainer.find('.ra_practice_results_play');\n      self.controls.results_playselfbutton = self.controls.resultscontainer.find('.ra_practice_results_playself');\n      self.controls.results_0stars = self.controls.resultscontainer.find('.ra_practice_feedback_0stars');\n      self.controls.results_1stars = self.controls.resultscontainer.find('.ra_practice_feedback_1stars');\n      self.controls.results_2stars = self.controls.resultscontainer.find('.ra_practice_feedback_2stars');\n      self.controls.results_3stars = self.controls.resultscontainer.find('.ra_practice_feedback_3stars');\n      self.controls.results_4stars = self.controls.resultscontainer.find('.ra_practice_feedback_4stars');\n      self.controls.results_5stars = self.controls.resultscontainer.find('.ra_practice_feedback_5stars');\n\n      // Audio players\n      self.controls.hiddenplayer = $('#mod_readaloud_practice_hiddenplayer');\n      self.controls.hiddenselfplayer = $('#mod_readaloud_practice_hiddenselfplayer');\n      self.controls.hiddenplayer.attr('src', self.audiourl);\n\n    },\n\n    // Set the breaks for the practice activity.\n    set_breaks: function(breaks) {\n        var self = this;\n        self.breaks = breaks;\n        self.sort_breaks();\n        self.add_info_to_breaks();\n    },\n\n    sort_breaks: function() {\n        var self = this;\n        self.breaks.sort(function(a, b) {\n        return a.audiotime - b.audiotime;\n      });\n    },\n\n    add_info_to_breaks: function(){\n      var self=this;\n      var lastbreakaudioend = 0;\n      var lastbreakwordnumber = 0;\n      for (var i = 0; i < self.breaks.length; i++) {\n          //Set the break number and audio start time (end time of previous break)\n          self.breaks[i].breaknumber=i+1;\n          self.breaks[i].audiostarttime= lastbreakaudioend;\n          \n          //Build the \"sentence\" property\n          var thesentence = \"\";\n          for (var thewordnumber = lastbreakwordnumber + 1; thewordnumber <= self.breaks[i].wordnumber; thewordnumber++) {\n              thesentence += $('#' + def.spaceclass + '_' + thewordnumber).text();\n              thesentence += $('#' + def.wordclass + '_' + thewordnumber).text();\n          }\n          self.breaks[i].sentence= thesentence;\n\n          // Set the lastbreak details for the next loop iteration.\n          lastbreakaudioend = self.breaks[i].audiotime;\n          lastbreakwordnumber = self.breaks[i].wordnumber;\n      }\n    },\n\n    pause_audio: function() {\n      this.controls.hiddenplayer[0].pause();\n    },\n\n    play_audio: function() {\n      this.controls.hiddenplayer[0].play();\n    },\n\n    get_audio_time: function() {\n      return this.controls.hiddenplayer[0].currentTime;\n    },\n\n    set_audio_time: function(newtime) {\n      this.controls.hiddenplayer[0].currentTime=newtime;\n    },\n\n    fetch_audio_url: function() {\n      return this.controls.hiddenplayer.attr('src');\n    },\n\n     move_break:  function(increment) {\n       var self = this;\n       //quick sanity check\n       if( self.currentbreak + increment < 0 || self.currentbreak + increment >= self.breaks.length) {\n           return;\n       }\n\n       //Increment the break number\n       self.currentbreak += increment;\n       var thebreak = self.breaks[self.currentbreak];\n\n        //get the previous break\n        var prevbreak = (self.currentbreak - 1 > 0) ? self.breaks[self.currentbreak - 1] : {wordnumber: 0, audiotime: 0};\n\n        //Update the sentence\n        if (thebreak.sentence.trim() === '') {\n          return;\n        }\n        var thesentence = thebreak.sentence.trim();\n        self.currentSentence = thesentence;\n\n        //in some cases ttrecorder wants to know the currentsentence\n        if(!self.ttr.usebrowserrec) {\n          self.ttr.currentPrompt= thesentence;\n        }\n\n      if(self.phonetics.length > thebreak.wordnumber-1){\n          var startpos = prevbreak.wordnumber;\n          if(startpos<0){startpos=0;}\n          var endpos = thebreak.wordnumber;\n\n          /*\n          * break=0: wordnumber 0 start = 0, end = 9: jssplit returns 0-8\n          * break=1: wordnumber 9 start = 9, end = 18: jssplit returns 9-17\n          * break=2: wordnumber 18 start = 18, end = 99: jssplit returns 18-98\n           */\n          self.currentPhonetic = self.phonetics.slice(startpos,endpos).join(' ');\n      }else{\n          self.currentPhonetic  = '';\n      }\n\n\n          // UI updates (mainly)\n          if (self.currentbreak === self.breaks[self.breaks.length - 1]) {\n            self.controls.finishedbutton.show();\n            self.controls.skipforwardbutton.hide();\n            // Alert server and activity controller that the listen and practice is complete\n            self.on_complete();\n          } else {\n            self.controls.finishedbutton.hide();\n            self.controls.skipforwardbutton.show();\n          }\n\n         //hide the self model player because when we show page again we dont want it enabled\n         self.controls.playselfbutton.hide();\n\n\n          self.pause_audio();\n\n         self.controls.targetphrase.html(thesentence.split(/ /).map(function(e, i) {\n            return '<div class=\"mod_readaloud_practice_target_word\" data-index=\"' + i + '\">' + e + '</div>';\n          }));\n\n      },\n\n    // Callback for when the practice activity is complete, overridden by activity controller.\n    on_complete: function() {},\n\n    // Register events for the listen and repeat activity.\n    register_events: function() {\n\n      var self = this;\n      var aplayer = self.controls.hiddenplayer[0];\n\n      self.controls.playbutton.on('click', function(e) {\n        if (!aplayer.paused) {\n          aplayer.pause();\n        }else {\n          aplayer.currentTime = self.breaks[self.currentbreak].audiostarttime;\n          aplayer.play();\n        }\n      });\n\n      self.controls.shadowplaycheckbox.on('change', function(e) {\n        self.ttr.shadow = $(this).is(':checked');\n      });\n\n      self.controls.skipforwardbutton.on('click', function(e) {\n            self.move_break(1);\n      });\n\n      self.controls.skipbackbutton.on('click', function(e) {\n            self.move_break(-1);\n\n      });\n\n      self.controls.finishedbutton.on('click', function() {\n       // self.controls.container.modal('hide');\n        aplayer.currentTime = 0;\n      });\n\n\n      aplayer.ontimeupdate = function() {\n          var currentbreak = self.breaks[self.currentbreak];\n          if (aplayer.currentTime >= currentbreak.audiotime) {\n              aplayer.pause();\n          }\n      };\n\n      // Results screen events\n        self.controls.results_retrybutton.on('click', function() {\n            //hide the results container and show the practice main stage\n            self.controls.resultscontainer.hide();\n            self.controls.mainstage.show();\n            self.controls.container.find('.ra_practice_main_container').show();\n        });\n        self.controls.results_nextbutton.on('click', function() {\n            //hide the results container and show the practice main stage\n            self.controls.resultscontainer.hide();\n            self.controls.mainstage.show();\n            self.controls.skipforwardbutton.trigger('click');\n        });\n        self.controls.results_playbutton.on('click', function() {\n            self.controls.playbutton.trigger('click');\n        });\n        self.controls.results_playselfbutton.on('click', function() {\n            if (!self.controls.hiddenselfplayer[0].paused) {\n                self.controls.hiddenselfplayer[0].pause();\n            }else {\n                self.controls.hiddenselfplayer.attr('src', self.ttr.audio.dataURI);\n                self.controls.hiddenselfplayer[0].play();\n            }\n        });\n\n    },\n\n   // spliton: new RegExp('([,.!?:;\" ])', 'g'),\n      spliton: new RegExp(/([!\"# $%&'()。「」、*+,-.\\/:;<=>?@[\\]^_`{|}~])/, 'g'),\n\n    gotComparison: function(comparison, typed) {\n     if(!comparison){return;}\n      var self = this;\n      var thisClass;\n      var wordsmatched=0;\n      $(\".mod_readaloud_practice_target_word\").removeClass(\"mod_readaloud_practice_target_word_correct mod_readaloud_practice_target_word_incorrect\");\n\n      comparison.forEach(function(word, idx) {\n\n        if( word.matched) {\n            thisClass = \"mod_readaloud_practice_target_word_correct\" ;\n            wordsmatched++;\n        }else{\n            thisClass = \"mod_readaloud_practice_target_word_incorrect\";\n        }\n        $(\".mod_readaloud_practice_target_word[data-index='\" + idx + \"']\").addClass(thisClass);\n      });\n        if(comparison.length == wordsmatched){\n\n            self.show_results(5);\n            // Previously we auto proceeded to next break if all words matched\n            //setTimeout(function(){self.controls.skipforwardbutton.trigger('click');},600);\n        } else {\n            var stars = Math.round((wordsmatched / comparison.length) * 5);\n            self.show_results(stars);\n        }\n    },\n    getComparison: function(cmid, passage, transcript,passagephonetic, callback) {\n      var self = this;\n\n      ajax.call([{\n        methodname: 'mod_readaloud_compare_passage_to_transcript',\n        args: {\n          cmid: cmid,\n          passage: passage,\n          transcript: transcript,\n          passagephonetic: passagephonetic,\n          language: self.language\n        },\n        done: function(ajaxresult) {\n          var payloadobject = JSON.parse(ajaxresult);\n          if (payloadobject) {\n            callback(payloadobject);\n          } else {\n            callback(false);\n          }\n        },\n        fail: function(err) {\n          log.debug(err);\n        }\n      }]);\n\n    },\n\n      show_results: function(stars) {\n            log.debug('show results', stars);\n            var self = this;\n            //show the results container and hide the practice main stage\n            self.controls.mainstage.hide();\n            self.controls.resultscontainer.show();\n\n            //show the marked up text\n            self.controls.results_text.html(self.controls.targetphrase.html());\n\n            //hide all the star based feedback\n            self.controls.results_0stars.hide();\n            self.controls.results_1stars.hide();\n            self.controls.results_2stars.hide();\n            self.controls.results_3stars.hide();\n            self.controls.results_4stars.hide();\n            self.controls.results_5stars.hide();\n\n            //based on star count show the right feedback\n            switch (stars) {\n                case 0:\n                    self.controls.results_0stars.show();\n                    break;\n                case 1:\n                    self.controls.results_1stars.show();\n                    break;\n                case 2:\n                    self.controls.results_2stars.show();\n                    break;\n                case 3:\n                    self.controls.results_3stars.show();\n                    break;\n                case 4:\n                    self.controls.results_4stars.show();\n                    break;\n                case 5:\n                    self.controls.results_5stars.show();\n                    break;\n                default:\n                    self.controls.results_0stars.show();\n            }\n      },\n\n      mobile_user: function() {\n\n          if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n              return true;\n          } else {\n              return false;\n          }\n      },\n\n      chrome_user: function(){\n          if(/Chrome/i.test(navigator.userAgent)) {\n              return true;\n          }else{\n              return false;\n          }\n      }\n  };\n});"],"names":["define","$","log","ajax","def","ttrecorder","debug","activated","audiourl","currentSentence","currentPhonetic","language","breaks","currentbreak","controls","results","phonetics","cmid","ttr","init","props","self","this","mak","modelaudiokaraoke","fetch_audio_url","set_breaks","region","stt_guided","shadow","opts","callback","message","type","shadowplaycheckbox","is","playbutton","trigger","playselfbutton","hide","hiddenplayer","pause","usebrowserrec","show","getComparison","capturedspeech","comparison","gotComparison","clone","prepare_controls","register_events","move_break","container","mainstage","find","targetphrase","skipforwardbutton","skipbackbutton","finishedbutton","resultscontainer","results_text","results_retrybutton","results_nextbutton","results_playbutton","results_playselfbutton","results_0stars","results_1stars","results_2stars","results_3stars","results_4stars","results_5stars","hiddenselfplayer","attr","sort_breaks","add_info_to_breaks","sort","a","b","audiotime","lastbreakaudioend","lastbreakwordnumber","i","length","breaknumber","audiostarttime","thesentence","thewordnumber","wordnumber","spaceclass","text","wordclass","sentence","pause_audio","play_audio","play","get_audio_time","currentTime","set_audio_time","newtime","increment","thebreak","prevbreak","trim","currentPrompt","startpos","endpos","slice","join","on_complete","html","split","map","e","aplayer","on","paused","ontimeupdate","audio","dataURI","spliton","RegExp","typed","thisClass","wordsmatched","removeClass","forEach","word","idx","matched","addClass","show_results","stars","Math","round","passage","transcript","passagephonetic","call","methodname","args","done","ajaxresult","payloadobject","JSON","parse","fail","err","mobile_user","test","navigator","userAgent","chrome_user"],"mappings":"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"}