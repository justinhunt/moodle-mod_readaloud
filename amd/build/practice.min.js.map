{"version":3,"file":"practice.min.js","sources":["../src/practice.js"],"sourcesContent":["define(['jquery', 'core/log', 'core/ajax', 'mod_readaloud/definitions', 'mod_readaloud/ttrecorder'],\n    function($, log, ajax, def,  ttrecorder) {\n  \"use strict\"; // jshint ;_;\n\n  log.debug('Readaloud Practice: initialising');\n\n  return {\n\n    activated: false,\n    audiourl: \"\",\n    currentSentence: \"\",\n    currentPhonetic: \"\",\n    language: \"en-US\",\n    breaks: [],\n    currentbreak: 0,\n    controls: {},\n    results: [],\n    phonetics: [],\n    cmid: 0,\n    ttr: {},\n\n    init: function(props) {\n\n      var self = this;\n      self.cmid = props.cmid;\n\n      //Get info from modelaudiokaraoke about breaks and text, for use here\n      self.mak = props.modelaudiokaraoke;\n      self.audiourl = self.mak.fetch_audio_url();\n      self.set_breaks(self.mak.breaks);\n\n      self.language = props.language;\n      self.region = props.region;\n      self.phonetics = props.phonetics;\n      self.stt_guided = props.stt_guided;\n      self.shadow = false;//props.shadow;\n      self.ttr={};\n\n      //recorder stuff\n      var theCallback =function(message) {\n          log.debug('Readaloud Practice: ttrecorder callback', message);\n          log.debug(message);\n          switch (message.type) {\n            case 'recordingstarted':\n              if (self.controls.shadowplaycheckbox.is(\":checked\")) {\n                self.shadow = true;\n                log.debug('shadow is true');\n                self.controls.playbutton.trigger('click');\n              }else{\n                log.debug('shadow is false');\n                self.shadow=false;\n              }\n              //hide the self model player (though it may not be here) because we do not want it playing old stuff into mic\n              self.controls.playselfbutton.hide();\n\n              break;\n\n            case 'recordingstopped':\n                  if (self.shadow === true){\n                    self.controls.hiddenplayer[0].pause();\n                  }\n                  if(self.stt_guided || self.ttr.usebrowserrec===false){\n                    self.controls.playselfbutton.show();\n                  }\n                  break;\n\n              case 'speech':\n\n                  self.getComparison(\n                      self.cmid,\n                      self.currentSentence,\n                      message.capturedspeech,\n                      self.currentPhonetic,\n                      function(comparison) {\n                          self.gotComparison(comparison, message);\n                      }\n                  );\n                  break;\n          }\n      };\n\n        //init tt recorder\n      var opts = {};\n      opts.uniqueid = 'readaloud_ttrecorder';\n      opts.stt_guided = self.stt_guided;\n      opts.callback = theCallback;\n      opts.shadow = false;\n      self.ttr = ttrecorder.clone();\n      self.ttr.init(opts);\n\n\n      self.prepare_controls();\n      self.register_events();\n      // Set the first break as current.\n      self.move_break(0);\n\n    },\n\n\n    prepare_controls: function() {\n      var self = this;\n      self.controls.container = $('#' + def.practicecontainer);\n      self.controls.hiddenplayer = $('#mod_readaloud_practice_hiddenplayer');\n      self.controls.hiddenselfplayer = $('#mod_readaloud_practice_hiddenselfplayer');\n      self.controls.playbutton = $('#mod_readaloud_practice_play');\n      self.controls.shadowplaycheckbox = $('#mod_readaloud_practice_shadow');\n      self.controls.skipforwardbutton = $('#mod_readaloud_practice_skipforward');\n      self.controls.skipbackbutton = $('#mod_readaloud_practice_skipback');\n      self.controls.finishedbutton = $(\"#mod_readaloud_practice_finished\");\n      self.controls.playselfbutton = $(\"#mod_readaloud_practice_playself\");\n      self.controls.hiddenplayer.attr('src', self.audiourl);\n\n    },\n\n    // Set the breaks for the practice activity.\n    set_breaks: function(breaks) {\n        var self = this;\n        self.breaks = breaks;\n        self.sort_breaks();\n        self.add_info_to_breaks();\n    },\n\n    sort_breaks: function() {\n        var self = this;\n        self.breaks.sort(function(a, b) {\n        return a.audiotime - b.audiotime;\n      });\n    },\n\n    add_info_to_breaks: function(){\n      var self=this;\n      var lastbreakaudioend = 0;\n      var lastbreakwordnumber = 0;\n      for (var i = 0; i < self.breaks.length; i++) {\n          //Set the break number and audio start time (end time of previous break)\n          self.breaks[i].breaknumber=i+1;\n          self.breaks[i].audiostarttime= lastbreakaudioend;\n          \n          //Build the \"sentence\" property\n          var thesentence = \"\";\n          for (var thewordnumber = lastbreakwordnumber + 1; thewordnumber <= self.breaks[i].wordnumber; thewordnumber++) {\n              thesentence += $('#' + def.spaceclass + '_' + thewordnumber).text();\n              thesentence += $('#' + def.wordclass + '_' + thewordnumber).text();\n          }\n          self.breaks[i].sentence= thesentence;\n\n          // Set the lastbreak details for the next loop iteration.\n          lastbreakaudioend = self.breaks[i].audiotime;\n          lastbreakwordnumber = self.breaks[i].wordnumber;\n      }\n    },\n\n    pause_audio: function() {\n      this.controls.hiddenplayer[0].pause();\n    },\n\n    play_audio: function() {\n      this.controls.hiddenplayer[0].play();\n    },\n\n    get_audio_time: function() {\n      return this.controls.hiddenplayer[0].currentTime;\n    },\n\n    set_audio_time: function(newtime) {\n      this.controls.hiddenplayer[0].currentTime=newtime;\n    },\n\n    fetch_audio_url: function() {\n      return this.controls.hiddenplayer.attr('src');\n    },\n\n     move_break:  function(increment) {\n       var self = this;\n       //quick sanity check\n       if( self.currentbreak + increment < 0 || self.currentbreak + increment >= self.breaks.length) {\n           return;\n       }\n\n       //Increment the break number\n       self.currentbreak += increment;\n       var thebreak = self.breaks[self.currentbreak];\n\n        //get the previous break\n        var prevbreak = (self.currentbreak - 1 > 0) ? self.breaks[self.currentbreak - 1] : {wordnumber: 0, audiotime: 0};\n\n        //Update the sentence\n        if (thebreak.sentence.trim() === '') {\n          return;\n        }\n        var thesentence = thebreak.sentence.trim();\n        self.currentSentence = thesentence;\n\n        //in some cases ttrecorder wants to know the currentsentence\n        if(!self.ttr.usebrowserrec) {\n          self.ttr.currentPrompt= thesentence;\n        }\n\n      if(self.phonetics.length > thebreak.wordnumber-1){\n          var startpos = prevbreak.wordnumber;\n          if(startpos<0){startpos=0;}\n          var endpos = thebreak.wordnumber;\n\n          /*\n          * break=0: wordnumber 0 start = 0, end = 9: jssplit returns 0-8\n          * break=1: wordnumber 9 start = 9, end = 18: jssplit returns 9-17\n          * break=2: wordnumber 18 start = 18, end = 99: jssplit returns 18-98\n           */\n          self.currentPhonetic = self.phonetics.slice(startpos,endpos).join(' ');\n      }else{\n          self.currentPhonetic  = '';\n      }\n\n\n          // UI updates (mainly)\n          if (self.currentbreak === self.breaks[self.breaks.length - 1]) {\n            self.controls.finishedbutton.show();\n            self.controls.skipforwardbutton.hide();\n            // Alert server and activity controller that the listen and practice is complete\n            self.on_complete();\n          } else {\n            self.controls.finishedbutton.hide();\n            self.controls.skipforwardbutton.show();\n          }\n\n         //hide the self model player because when we show page again we dont want it enabled\n         self.controls.playselfbutton.hide();\n\n\n          self.pause_audio();\n\n          $(\"#mod_readaloud_practice_target_phrase\").html(thesentence.split(/ /).map(function(e, i) {\n            return '<div class=\"mod_readaloud_practice_target_word\" data-index=\"' + i + '\">' + e + '</div>';\n          }));\n\n      },\n\n    // Callback for when the practice activity is complete, overridden by activity controller.\n    on_complete: function() {},\n\n    // Register events for the listen and repeat activity.\n    register_events: function() {\n\n      var self = this;\n      var aplayer = self.controls.hiddenplayer[0];\n\n      self.controls.playbutton.on('click', function(e) {\n        if (!aplayer.paused) {\n          aplayer.pause();\n        }else {\n          aplayer.currentTime = self.breaks[self.currentbreak].audiostarttime;\n          aplayer.play();\n        }\n      });\n\n      self.controls.playselfbutton.on('click',function(e){\n        if (!self.controls.hiddenselfplayer[0].paused) {\n          self.controls.hiddenselfplayer[0].pause();\n        }else {\n          self.controls.hiddenselfplayer.attr('src', self.ttr.audio.dataURI);\n          self.controls.hiddenselfplayer[0].play();\n        }\n      });\n\n      self.controls.shadowplaycheckbox.on('change', function(e) {\n        self.ttr.shadow = $(this).is(':checked');\n      });\n\n      self.controls.skipforwardbutton.on('click', function(e) {\n            self.move_break(1);\n      });\n\n      self.controls.skipbackbutton.on('click', function(e) {\n            self.move_break(-1);\n\n      });\n\n      self.controls.finishedbutton.on('click', function() {\n       // self.controls.container.modal('hide');\n        aplayer.currentTime = 0;\n      });\n\n\n      aplayer.ontimeupdate = function() {\n          var currentbreak = self.breaks[self.currentbreak];\n          if (aplayer.currentTime >= currentbreak.audiotime) {\n              aplayer.pause();\n          }\n      };\n\n    },\n\n   // spliton: new RegExp('([,.!?:;\" ])', 'g'),\n      spliton: new RegExp(/([!\"# $%&'()。「」、*+,-.\\/:;<=>?@[\\]^_`{|}~])/, 'g'),\n\n    gotComparison: function(comparison, typed) {\n     if(!comparison){return;}\n      var self = this;\n      var thisClass;\n      var wordsmatched=0;\n      $(\".mod_readaloud_practice_target_word\").removeClass(\"mod_readaloud_practice_target_word_correct mod_readaloud_practice_target_word_incorrect\");\n\n      comparison.forEach(function(word, idx) {\n\n        if( word.matched) {\n            thisClass = \"mod_readaloud_practice_target_word_correct\" ;\n            wordsmatched++;\n        }else{\n            thisClass = \"mod_readaloud_practice_target_word_incorrect\";\n        }\n        $(\".mod_readaloud_practice_target_word[data-index='\" + idx + \"']\").addClass(thisClass);\n        if(comparison.length == wordsmatched){\n            // TO DO Here we want to show flashy results page, but for now lets retails skip forward feature\n            setTimeout(function(){self.controls.skipforwardbutton.trigger('click');},600);\n        }\n      });\n\n    },\n    getComparison: function(cmid, passage, transcript,passagephonetic, callback) {\n      var self = this;\n\n      ajax.call([{\n        methodname: 'mod_readaloud_compare_passage_to_transcript',\n        args: {\n          cmid: cmid,\n          passage: passage,\n          transcript: transcript,\n          passagephonetic: passagephonetic,\n          language: self.language\n        },\n        done: function(ajaxresult) {\n          var payloadobject = JSON.parse(ajaxresult);\n          if (payloadobject) {\n            callback(payloadobject);\n          } else {\n            callback(false);\n          }\n        },\n        fail: function(err) {\n          log.debug(err);\n        }\n      }]);\n\n    },\n\n      mobile_user: function() {\n\n          if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n              return true;\n          } else {\n              return false;\n          }\n      },\n\n      chrome_user: function(){\n          if(/Chrome/i.test(navigator.userAgent)) {\n              return true;\n          }else{\n              return false;\n          }\n      }\n  };\n});"],"names":["define","$","log","ajax","def","ttrecorder","debug","activated","audiourl","currentSentence","currentPhonetic","language","breaks","currentbreak","controls","results","phonetics","cmid","ttr","init","props","self","this","mak","modelaudiokaraoke","fetch_audio_url","set_breaks","region","stt_guided","shadow","opts","callback","message","type","shadowplaycheckbox","is","playbutton","trigger","playselfbutton","hide","hiddenplayer","pause","usebrowserrec","show","getComparison","capturedspeech","comparison","gotComparison","clone","prepare_controls","register_events","move_break","container","practicecontainer","hiddenselfplayer","skipforwardbutton","skipbackbutton","finishedbutton","attr","sort_breaks","add_info_to_breaks","sort","a","b","audiotime","lastbreakaudioend","lastbreakwordnumber","i","length","breaknumber","audiostarttime","thesentence","thewordnumber","wordnumber","spaceclass","text","wordclass","sentence","pause_audio","play_audio","play","get_audio_time","currentTime","set_audio_time","newtime","increment","thebreak","prevbreak","trim","currentPrompt","startpos","endpos","slice","join","on_complete","html","split","map","e","aplayer","on","paused","audio","dataURI","ontimeupdate","spliton","RegExp","typed","thisClass","wordsmatched","removeClass","forEach","word","idx","matched","addClass","setTimeout","passage","transcript","passagephonetic","call","methodname","args","done","ajaxresult","payloadobject","JSON","parse","fail","err","mobile_user","test","navigator","userAgent","chrome_user"],"mappings":"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"}